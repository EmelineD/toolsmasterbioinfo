{
  "name": "github-token",
  "version": "0.1.1",
  "description": "Login with GitHub and retrieve an access token",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/phated/github-token"
  },
  "keywords": [
    "github",
    "oauth",
    "access token"
  ],
  "author": {
    "name": "Blaine Bublitz",
    "email": "blaine@iceddev.com",
    "url": "http://iceddev.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/phated/github-token/issues"
  },
  "dependencies": {
    "rest": "~1.0.0",
    "when": "~2.6.0"
  },
  "readme": "github-token\n============\n\nLogin with GitHub and retrieve an access token\n\n## Usage\n\n### configuration\n\nConfiguration can be done with a config object or with environment variables\n\n```js\n// config object\nvar githubToken = require('github-token')({\n  githubClient: 'YOUR_CLIENT_KEY',\n  githubSecret: 'YOUR_GITHUB_SECRET',\n  baseURL: 'http://localhost',\n  callbackURI: '/callback',\n  scope: 'user' // optional, default scope is set to user\n});\n\n// environment variables\nvar githubToken = require('github-token')();\n```\n\nEnvironment variables are used if a config object isn't passed, and include\n\n* `GITHUB_CLIENT`\n* `GITHUB_SECRET`\n* `GITHUB_BASE_URL`\n* `GITHUB_CALLBACK_URI`\n* `GITHUB_SCOPE`\n\n### login\n\n`login` is passed the request and response objects, and redirects to GitHub OAuth login\n\n```js\nrequire('http').createServer(function(req, res){\n  if(req.url.match(/login/)){\n    return githubToken.login(req, res);\n  }\n}).listen(80);\n```\n\n### callback\n\n`callback` returns a promise or takes a callback\n\n```js\n// promise\nrequire('http').createServer(function(req, res){\n  if(req.url.match(/callback/)){\n    return githubToken.callback(req, res)\n      .then(function(token){\n        req.session.token = token;\n      });\n  }\n}).listen(80);\n\n// callback\nrequire('http').createServer(function(req, res){\n  if(req.url.match(/callback/)){\n    return githubToken.callback(req, res, function(err, token){\n      req.session.token = token;\n    });\n  }\n}).listen(80);\n```\n\n## What about [github-oauth](https://github.com/maxogden/github-oauth)\n\nI took a lot of inspiration from github-oauth, but didn't like the evented model.\nEspecially, when the config is done globally to an app or you need to access the request again.\n\nI removed the loginURI option, because there is no route sugar, but all other options are the same.\n\nExample:\n\n```js\nvar githubToken = require('github-token')({\n  githubClient: process.env['GITHUB_CLIENT'],\n  githubSecret: process.env['GITHUB_SECRET'],\n  baseURL: 'http://localhost',\n  callbackURI: '/callback',\n  scope: 'user' // optional, default scope is set to user\n});\n\nrequire('http').createServer(function(req, res){\n  if(req.url.match(/login/)){\n    return githubToken.login(req, res);\n  }\n  if(req.url.match(/callback/)){\n    return githubToken.callback(req, res)\n      .then(function(token){\n        req.session.token = token;\n      });\n  }\n}).listen(80);\n```\n",
  "readmeFilename": "README.md",
  "_id": "github-token@0.1.1",
  "dist": {
    "shasum": "c3fd6432b2c60daee3f9401a2e8d569af36238fd"
  },
  "_from": "github-token@",
  "_resolved": "https://registry.npmjs.org/github-token/-/github-token-0.1.1.tgz"
}
